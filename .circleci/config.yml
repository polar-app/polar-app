# % >= 2.1 Required for Orbs
version: 2.1

# @ Custom Orbs
orbs:
  win: circleci/windows@2.2.0
  cypress: cypress-io/cypress@1.28.0

# ~ Pre-Script Steps to Execute before Jobs
commands:
  # & Publishing setup steps
  publishing_setup:
    description: set the SSH keys and Hashes required to deploy
    steps:
      # ! Add SSH Keys for publishing
      - add_ssh_keys:
          fingerprints:
            - "26:22:fe:b3:b7:ce:d8:43:cf:2d:e6:17:26:31:d1:58"
            - "37:a5:24:7a:89:73:b1:cf:11:3d:98:de:b4:50:25:58"
            - "16:e3:06:7e:6e:58:07:3a:20:35:14:c3:7e:98:33:bb"
            - "SHA256:uwzneTU1Stml8f1GDcffUJPK6GxSs77+vMZOHopRJLE burton@getpolarized.io"

  # & Install Global Modules
  global_modules_setup:
    description: install global modules
    steps:
      # ! Install Basic Modules { lerna, npm, firebase tools }
      - run:
          name: Install global node_modules
          command: |
            sudo yarn global add lerna@4.0.0
            sudo yarn global add npm@7.19.1
            sudo yarn global add firebase-tools@9.16.0

  # & Publishing setup steps
  build_setup:
    description: setup the build for commands
    steps:
      - checkout

      # ! Download and cache dependencies
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # ! Install Required Linux Binary (libvips is needed by sharp which is needed by gatsby)
      - run:
          name: Required Linux packages
          command: if [ "$OSTYPE" = 'linux-gnu' ]; then sudo apt update -y && sudo apt install libvips libvips-dev pngquant -y; fi

      # ? Debug Step for Node/Npm/Yarn/Lerna/Firebase Versions
      - run:
          name: DEBUG(Node, NPM, Yarn, Lerna & Firebase Versions)
          command: |
            echo -n "Node version: "
            node --version
            echo -n "NPM version: "
            npm --version
            echo -n "Yarn version: "
            yarn --version
            echo -n "Lerna version: "
            lerna --version
            echo -n "firebase version: "
            firebase --version

      # ? Debug Step for OS version
      - run:
          name: DEBUG(OS Environment)
          command: |
            echo $OSTYPE
            uname -a

      # ? Debug step for Npm/Yarn Configuration
      - run:
          name: DEBUG(NPM/Yarn Setup)
          command: |
            cp .npmrc ~/.npmrc
            cat ~/.npmrc
            echo "npm ping: ======"
            npm ping
            echo "npm config list: ======"
            npm config list
            echo "npm config ls -l: ======"
            npm config ls -l
            echo "yarn config list: ======"
            yarn config list

      # ! Hoist all Dependencies
      - run:
          name: lerna bootstrap
          no_output_timeout: 30m
          command: |
            npm config set legacy-peer-deps true
            npx lerna bootstrap --ci && find node_modules -type l -name 'polar*' -exec rm '{}' ';' && npx lerna link

      # ! Compile all Typescript Packages
      - run:
          name: Lerna Compile
          command: npx lerna run compile

      # ? Debug step for checking if there are any duplicate packages
      - run:
          name: DEBUG(Check if duplicate packages with different versions exist)
          command: |
            DUPLICATES=$(lerna exec --concurrency=1 --parallel=false --no-bail -- node /home/circleci/project/packages/polar-app-public/polar-npm/src/npm-dump-dependencies.js | sort | uniq | tr " " "\n" | sed '/[0-9]/d' | sed -r '/^\s*$/d' | uniq -d)
            echo -e "\n\n $DUPLICATES \n\n"
            lerna exec --concurrency=1 --parallel=false --no-bail -- node /home/circleci/project/packages/polar-app-public/polar-npm/src/npm-dump-dependencies.js | sort | uniq | tr " " "\n" | sed '/[0-9]/d' | sed -r '/^\s*$/d' | uniq -d | if [ $(wc -l) -gt "0" ]; then echo -e '\n\n\033[1mPLEASE FIX DUPLICATE PACKAGES WITH DIFFERENT VERSIONS\033[0m' && exit 1; fi

      # ! Save Cache
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # ! Persist the files to carry over to the next stage
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - project

# ~ Workflow Building Blocks
jobs:
  # @ Build the application for the following steps
  setting-up:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    description: build the application for all the following steps
    steps:
      - global_modules_setup
      - build_setup

  # @ Run Karma Test Suite
  karma:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    description: "Run our karma tests in the browser."
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: karma
          command: |
            cd /home/circleci/project/packages/polar-bookshelf
            sudo apt update -y && sudo apt install chromium --fix-missing -y
            export CHROME_BIN='/usr/bin/chromium'
            yarn run webpack
            yarn run karma

  # @ Run tests
  test:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    description: "Run our karma tests in the browser."
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: test
          command: |
            cd /home/circleci/project
            npx lerna run test

  # @ Build polar chrome extension
  build-chrome-extension:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    description: "Build the polar chrome extension"
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Build
          command: |
            cd /home/circleci/project/packages/polar-app-public/polar-web-extension/
            export POLAR_EXTENSION_TYPE=PROD
            yarn run dist

  # @ Build Polar-Bookshelf Webapp
  build-polar-app:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: build and verify webapp
          command: |
            cd /home/circleci/project/packages/polar-bookshelf && \
            free -m && \
            yarn run build-webapp && \
            echo "Webapp Built Successfully" && \
            cat dist/public/repository-bundle.js | gzip -c > dist/public/repository-bundle.js.gz
            find dist/public/repository-bundle.js.gz -size +1300000c |tee /dev/stderr| egrep '.*'
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - project

  # @ Deploy Polar-Bookshelf
  deploy-polar-app:
    parameters:
      executor:
        type: executor
      firebase_hosting_target:
        type: string
    executor: << parameters.executor>>
    steps:
      - global_modules_setup
      - publishing_setup
      - attach_workspace:
          at: ~/
      - run:
          name: Setup Credentials and Deploy Packages to Verdaccio
          no_output_timeout: 120m
          command: |
            npm config set always-auth true
            source packages/polar-bookshelf-secrets/credentials.sh
            rm -f ~/.npmrc && cat .npmrc > ~/.npmrc
            lerna run test
            yarn run dist-validate-env
            lerna exec --concurrency=1 --parallel=false --no-private  --no-bail -- yarn publish --verbose
            (cd packages/polar-app-private/polar-webapp-dist && yarn run dist)
      - run:
          name: Deploy to Firebase Hosting & Cloud Functions
          no_output_timeout: 120m
          command: |
            export FIREBASE_HOSTING_TARGET=<< parameters.firebase_hosting_target >>
            (cd /home/circleci/project/packages/polar-app-private/polar-hooks && echo Pushing to target ${FIREBASE_HOSTING_TARGET} && firebase use polar-32b0f && firebase target:clear hosting app.getpolarized.io && firebase target:apply hosting app.getpolarized.io ${FIREBASE_HOSTING_TARGET} && firebase deploy --only hosting,storage,firestore)
            mv /home/circleci/project/packages/polar-app-private/polar-hooks/ /home/circleci/
            rm -rf /home/circleci/project
            cd /home/circleci/polar-hooks
            rm -rf node_modules && rm -rf functions/node_modules && yarn install && (cd functions && yarn install)
            time firebase deploy --only functions

  # @ Build getpolarized.io Website
  build-polar-site:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    steps:
      - global_modules_setup
      - attach_workspace:
          at: ~/
      - run:
          name: build and verify site (getpolarized.io)
          command: |
            cd /home/circleci/project/packages/polar-site2
            yarn run dist

  # @ Deploy getpolarized.io
  deploy-polar-site:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor>>
    steps:
      - publishing_setup
      - attach_workspace:
          at: ~/
      - run:
          name: deploy
          command: |
            cd /home/circleci/project/packages/polar-site2
            yarn run dist-release

# ~ Define Custom Executors
executors:
  # ! Default Executor for most jobs
  xlarge:
    docker:
      - image: circleci/node:14.16.0-buster
    resource_class: xlarge
  large:
    docker:
      - image: circleci/node:14.16.0-buster
    resource_class: large
  ff-chrome:
    docker:
      - image: cypress/browsers:node14.17.0-chrome88-ff89
    resource_class: xlarge

# ~ Define Workflow Steps
workflows:
  version: 2
  main:
    jobs:
      ## ^ Commonality Between Sub-Workflows
      # @ Setup the repo for the subsquent stages
      - setting-up:
          executor: large

      ## ^ Chrome Extension Sub-Workflow
      # @ Setup the repo for the subsquent stages
      - build-chrome-extension:
          executor: large
          requires:
            - "setting-up"

      ## ^ Polar App Sub-Workflow Below Here
      # @ Run Karma Tests
      - karma:
          executor: large
          requires:
            - setting-up

      - test:
          executor: large
          requires:
            - setting-up

      # @ Build Polar app
      - build-polar-app:
          executor: large
          requires:
            - setting-up

      # @ Run Cypress tests for chrome-desktop (1080p)
      - cypress/run:
          name: cypress-desktop-chrome
          executor: ff-chrome
          requires:
            - build-polar-app
          working_directory: /root/project/packages/polar-bookshelf
          start: export WEBPACK_BUNDLE=repository && time node --max-old-space-size=7000 ./node_modules/.bin/webpack serve
          wait-on: "http://localhost:8050"
          command: npx cypress install && npx cypress run --env WIDTH=1920,HEIGHT=1080 --browser chrome
          attach-workspace: true
          store_artifacts: true

      # @ Run Cypress tests for firefox-desktop (1080p)
      - cypress/run:
          name: cypress-desktop-firefox
          executor: ff-chrome
          requires:
            - build-polar-app
          working_directory: /root/project/packages/polar-bookshelf
          start: export WEBPACK_BUNDLE=repository && time node --max-old-space-size=7000 ./node_modules/.bin/webpack serve
          wait-on: "http://localhost:8050"
          command: npx cypress install && npx cypress run --env WIDTH=1920,HEIGHT=1080 --browser firefox
          attach-workspace: true
          store_artifacts: true

      # @ Run Cypress tests for chrome-mobile (using iPhone 11 pro viewport)
      - cypress/run:
          name: cypress-mobile-chrome
          executor: ff-chrome
          requires:
            - build-polar-app
          working_directory: /root/project/packages/polar-bookshelf
          start: export WEBPACK_BUNDLE=repository && time node --max-old-space-size=7000 ./node_modules/.bin/webpack serve
          wait-on: "http://localhost:8050"
          command: npx cypress install && npx cypress run --env WIDTH=375,HEIGHT=812 --browser firefox
          attach-workspace: true
          store_artifacts: true

      # @ Run Cypress tests for chrome-tablet (using iPad pro viewport)
      - cypress/run:
          name: cypress-tablet-chrome
          executor: ff-chrome
          requires:
            - build-polar-app
          working_directory: /root/project/packages/polar-bookshelf
          start: export WEBPACK_BUNDLE=repository && time node --max-old-space-size=7000 ./node_modules/.bin/webpack serve
          wait-on: "http://localhost:8050"
          command: npx cypress install && npx cypress run --env WIDTH=1024,HEIGHT=1366 --browser firefox
          attach-workspace: true
          store_artifacts: true

      # @ Approve Polar app build for deployment
      - approve-polar-app:
          type: approval
          requires:
            - karma
            - cypress-desktop-firefox
            - cypress-desktop-chrome
            - cypress-tablet-chrome
            - cypress-mobile-chrome
          filters:
            branches:
              only:
                - master

      # @ Deploy Approved Polar app build
      - deploy-polar-app:
          executor: xlarge
          firebase_hosting_target: polar-webapp
          requires:
            - approve-polar-app
          filters:
            branches:
              only:
                - master

      ## ^ Polar Site Sub-Workflow Below Here
      # @ Build Polar Site
      - build-polar-site:
          executor: large
          requires:
            - setting-up

      # @ Approve Polar Site build for deployment
      - approve-polar-site:
          type: approval
          requires:
            - build-polar-site
          filters:
            branches:
              only:
                - master

      # @ Deploy Approved Polar Site build
      - deploy-polar-site:
          executor: large
          requires:
            - approve-polar-site
          filters:
            branches:
              only:
                - master

#!/usr/bin/env node

const fs = require('fs');
const { spawn } = require("child_process");

function getRepoDir(str) {

    // https://github.com/burtonator/polar-app.git

    // returns polar-app

    const m = str.match(/([a-zA-Z0-9.-]+)$/)

    if (m) {
        return m[1].replace(".git", "");
    }

    return undefined;

}

function getRepos() {

    const buff = fs.readFileSync('conf/repos.conf');

    const content = buff.toString('utf-8');

    return content.split('\n')
                  .filter(current => current !== '');

}

async function doGit(cwd, args) {

    return new Promise((res, rej) => {

        console.log(`mgit: ==== working with ${cwd}`);

        const git = spawn("git", args, {cwd});

        git.stdout.on("data", data => {
            console.log(`${data}`);
        });

        git.stderr.on("data", data => {
            console.error(`${data}`);
        });

        git.on('error', (error) => {
            console.error(`${error.message}`);
        });

        git.on("close", code => {

            if (code !== 0) {
                rej(code);
            }

            res(0);

        });

    });

}

async function doExec() {

    const args = process.argv.slice(2);

    doGit(__dirname, args);

    for (const repo of getRepos()) {

        const repoDir = getRepoDir(repo);
        const packageDir = `packages/${repoDir}`;
        await doGit(packageDir, args);

    }

    console.log("done");

}

doExec().
    catch(err => console.error(err));

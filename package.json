{
	"name": "polar-app",
	"version": "1.0.0",
	"description": "",
	"main": "index.js",
	"workspaces": [
		"packages/polar-app-private/*",
		"packages/polar-app-private/polar-hooks/functions",
		"packages/polar-app-public/*",
		"packages/polar-bookshelf",
		"packages/polar-bookshelf-secrets",
		"packages/polar-site2"
	],
	"scripts": {
		"bash": "docker build --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) -f Dockerfile -t polar . && docker run -v $(PWD):/app:delegated -w /app -u $(id -u ${USER}):$(id -g ${USER}) -ti --rm --init --ulimit memlock=819200000:819200000 polar bash",
		"compile": "lerna run compile",
		"publish": "lerna exec --no-private -- npm publish --no-bail",
		"test": "echo \"Error: no test specified\" && exit 1",
		"dist-validate-env": "./sbin/dist-validate-env",
		"set-registry-bytesafe-rw": "rm -f ~/.npmrc && cat .npmrc.bytesafe > ~/.npmrc",
		"set-registry-default-rw": "rm -f ~/.npmrc && cat .npmrc.default > ~/.npmrc",
		"lerna-run-compile": "lerna run --concurrency=1 --parallel=false compile",
		"lerna-run-dist": "lerna run --concurrency=1 --parallel=false --stream dist",
		"lerna-run-test": "lerna run --concurrency=1 --parallel=false test",
		"lerna-npm-publish": "npm run-script dist-validate-env && lerna exec --concurrency=1 --parallel=false --no-private  --no-bail -- npm publish && echo 'Packages successfully published'",
		"rebuild": "npm run-script purge-node-modules && lerna bootstrap && npm run-script lerna-run-compile",
		"dist-version": "lerna --yes --no-git-tag-version version patch && lerna bootstrap",
		"dist-version-for-release": "./sbin/dist-version-for-release",
		"dist-clean": "git clean -Xfd && git clean -fd",
		"dist-prepare": "npm run-script dist-clean && ./sbin/mgit reset --hard HEAD && ./sbin/mgit pull",
		"dist-build": "npm run-script purge-node-modules && lerna bootstrap && npm run-script lerna-run-compile && npm run-script lerna-run-dist",
		"dist-publish": "npm run-script lerna-npm-publish | tee dist-publish.log",
		"do-release-webapp": "npm run-script dist-publish && lerna run --concurrency=1 --parallel=false dist-release",
		"do-release-macos": "cd packages/polar-bookshelf && ./scripts/dist-release.sh macos",
		"do-release-init": "npm run-script dist-clean && npm run-script purge-node-modules && lerna bootstrap && npm run-script lerna-run-compile",
		"do-release-win": "cd packages/polar-bookshelf && ./scripts/dist-release.sh win",
		"do-release-linux": "cd packages/polar-bookshelf && ./scripts/dist-release.sh linux",
		"dist-release-publish": "npm run-script dist-prepare && npm run-script dist-build && npm run-script dist-publish",
		"dist-release-webapp": "npm run-script set-registry-bytesafe-rw && lerna bootstrap && lerna run compile && lerna run test && lerna run publish && (cd packages/polar-app-private/polar-webapp-dist && npm run-script dist) && (cd packages/polar-app-private/polar-hooks && npm run-script dist-release)",
		"dist-release-webapp-init": "lerna bootstrap && lerna run compile && lerna run test && npm run-script lerna-npm-publish && (cd packages/polar-app-private/polar-webapp-dist && npm run-script dist)",
		"dist-release-webapp-release": "(cd packages/polar-app-private/polar-hooks && npm run-script dist-release)",
		"dist-release-linux": "npm run-script do-release-init && npm run-script do-release-linux",
		"dist-release-win": "npm run-script do-release-init && npm run-script do-release-win",
		"dist-release-macos": "npm run-script do-release-init && npm run-script do-release-macos",
		"dist-release-site": "cd packages/polar-site2 && npm run-script publish",
		"lerna-outdated": "lerna exec --concurrency=1 --parallel=false --no-bail -- 'echo ${PWD} && npm outdated'",
		"purge-node-modules": "rm -rf node_modules && npx lerna exec --concurrency=1 --parallel=false -- rm -rf node_modules",
		"ls-packages": "lerna exec --concurrency=1 --parallel=false --no-bail -- 'echo ${PWD}'",
		"find-broken-imports": "find . -type f -name \"*.ts\" ! -path '*/node_modules/*' |xargs grep import |grep -E \"[\\\"'](\\.\\./)+polar\"\n",
		"__TODO": "dev dependencies too...",
		"find-package-versions": "lerna exec --concurrency=1 --parallel=false --no-private -- jq -r .dependencies package.json  |grep -Eo '^  [^,]+' | sort",
		"find-package-versions-conflicting": "npm run-script find-package-versions | uniq | grep -Eo '^[^:]+' |uniq -c |sort |grep -Ev '^[ ]+1 '"
	},
	"deprecated": {},
	"keywords": [],
	"author": "",
	"license": "ISC",
	"devDependencies": {
	},
	"private": true
}




// allow reads on resources that aren't present.  This is critical because if
// we do not have this rule then when a user tries to read a document that
// does not exist then they will get a "permission failed" error/exception.
// We also need to do this FIRST so that no other rule is evaluated since
// they might result in null pointer exceptions when trying to read the data
// property on a record that does not exist.
allow delete, read: if resource == null || resource.data == null;

// TODO: what if the group has been flagged as deleted?

allow read: if ['public', 'protected'].hasAny([resource.data.visibility]);

// only allow members of this group to read which documents are
// contained here. Writes are not allowed because they are implemented
// via a cloud hook.
allow read: if isPermittedGroup(resource.data.id);

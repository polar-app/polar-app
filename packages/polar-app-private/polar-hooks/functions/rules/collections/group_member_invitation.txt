// allow reads on resources that aren't present.  This is critical because if
// we do not have this rule then when a user tries to read a document that
// does not exist then they will get a "permission failed" error/exception.
// We also need to do this FIRST so that no other rule is evaluated since
// they might result in null pointer exceptions when trying to read the data
// property on a record that does not exist.
allow delete, read: if resource == null || resource.data == null;

// If the user is the owner (by email) they can read it.
allow delete, read: if request.auth != null && request.auth.token.email == resource.data.to;

// allow write if the user is the owner by looking at their profileID.
allow read: if resource.data.from != null && matchesProfileID(resource.data.from.profileID);

// TODO: also allow us to list all invitations for a specific group if the user
// is the admin of that group

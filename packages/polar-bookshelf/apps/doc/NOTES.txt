namespace Store {

    interface IAnnotations {

        readonly filter: string;

        /**
         * The raw annotations data which is unfiltered.
         */
        readonly data: ReadonlyArray<DocAnnotation>;

        /**
         * The annotations to display in the UI which is (optionally) filtered.
         */
        readonly view: ReadonlyArray<DocAnnotation>;

    }

    interface IDoc {

        /**
         * The doc URL loaded into cloud storage.
         */
        readonly docURL?: URLStr;

        /**
         * The DocMeta currently being managed.
         */
        readonly docMeta: IDocMeta;

        /**
         * The raw PDF doc that's loaded.
         */
        readonly pdf: PDFJS.PDFDocumentProxy;

    }

    interface IView {


        /**
         * The current scale of the UI
         */
        readonly scale: number | string;

        readonly page: number;

        // used so that we can change pages.
        readonly pageNavigator?: PDFPageNavigator;

        readonly scaleLeveler?: ScaleLeveler;

        readonly resizer?: Resizer;

    }

    interface IFind {

        readonly text: string;

        /**
         * True when find is active.
         */
        readonly active: boolean;

        /**
         * The currently active FindHandler registered when the document loads
         * so that the user can execute 'find' commands
         */
        readonly findHandler: FindHandler;

    }

    interface ILoadedDoc {
        // the page
        readonly nrPages: number;

        readonly fingerprint: string;

        readonly finder: Finder;

    }

}

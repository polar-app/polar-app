// need to track the context and the app too and the component.
@startuml

skinparam {

    defaultFontSize 14
    defaultTextAlignment center
    defaultFontName Bitstream Vera Sans Mono

    ParticipantFontSize 15
    LifeLineFontSize 18
    NoteFontSize 14
    NoteBackgroundColor lightgrey
    NoteBorderColor black
 }

participant "ContextMenuController \n(viewer/renderer) " AS ContextMenuController
participant "ElectronContextMenu \n(viewer/main) " AS ElectronContextMenu
participant "AnnotationsController \n(viewer/renderer)" AS AnnotationsController

participant "DialogService \n(viewer/main)" AS DialogService
participant "CreateFlashcardService \n(create-flashcard/renderer)" AS CreateFlashcardService

ContextMenuController -> ElectronContextMenu: TriggerEvent via IPC
ElectronContextMenu -> AnnotationsController: 'create-flashcard' via postMessage

AnnotationsController -> CreateFlashcardService: '/create-flashcard/api/create' (AnnotationDescriptor) via IPCEngine

AnnotationsController -> DialogService: '/api/dialog-window-service/show' via IPCEngine

CreateFlashcardService -> PostMessageFormHandler: (attach new form)

PostMessageFormHandler -> FlashcardsController: update JSON object

@enduml

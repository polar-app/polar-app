{
  "name": "polar-bookshelf",
  "version": "0.0.0",
  "description": "Polar",
  "scripts": {
    "testit": "echo ./dist/polar-bookshelf_${npm_package_version}_amd64.snap",
    "clean": "rm -rf web/dist && rm -rf dist/public && rm -rf .webpack-cache-loader && rm -rf .terser-webpack-plugin && rm -rf tsconfig.tsbuildinfo",
    "build-webapp": "pnpm run clean && npx tsc && export NODE_ENV=production && export WEBPACK_TARGET=web && pnpm run webpack",
    "setup-dist-appx": "cp web/js/dist_config/AppXDistConfig.ts web/js/dist_config/DistConfig.ts",
    "publish-linux-snapcraft": "snapcraft push --release stable ./dist/polar-bookshelf-${npm_package_version}-amd64.snap",
    "publish-webapp": "pnpm run build-webapp && firebase use polar-32b0f && ./scripts/firebase-set-hosting && firebase deploy",
    "publish-win": "./scripts/dist-win.sh",
    "__dist-linux": "pnpm run setup-dist-default && pnpm run compile && pnpm run publish-linux && pnpm run publish-linux-snapcraft",
    "dist-webapp": "pnpm run setup-dist-default && pnpm run compile && pnpm run publish-webapp",
    "dist": "pnpm run build-webapp",
    "dist-prepare": "",
    "compile": "RESULT=\"$(find . -name '*.ts' -o -name '*.tsx' -not -path './node_modules/*' -not -name '*.d.ts*')\" && if [ -z \"$RESULT\" ]; then echo 'Nothing to Compile'; else pnpm run tsc; fi;",
    "compile-watch": "tsc --watch",
    "test": "RESULT=\"$(find . -name '**Test.js' -o -name '**TestN.js' -o -name '**TestNK.js' -not -path 'node_modules/*')\" && if [ -z \"$RESULT\" ]; then echo 'No tests'; else pnpm run mocha; fi;",
    "eslint": "eslint -c ../../.eslintrc.json . --no-error-on-unmatched-pattern",
    "webpack": "rm -rf dist/public && rm -rf .webpack-cache-loader && rm -rf .terser-webpack-plugin/ && mkdir -p dist/public && npx --max_old_space_size=4096 webpack --config=webpack.config.js && pwd && ls -al dist/public && echo 'Webpack built successfully'",
    "webpack-serve": "../../node_modules/.bin/webpack serve --host=0.0.0.0",
    "find-unhandled-promises": "pnpm run tslint | grep 'Promises must be handled appropriately' | grep -v 'web/test' ; true",
    "serve": "node scripts/serve.js",
    "karma": "RESULT=\"$(find . -name '**Test.js' -o -name '**TestK.js' -o -name '**TestNK.js' -not -path 'node_modules/*')\" && if [ -z \"$RESULT\" ]; then echo 'No tests'; else timeout 5m npx karma start; fi;",
    "karma:dev": "karma start --browsers Chrome --singleRun false",
    "mocha": "mocha -p --retries 1 --jobs=1 --timeout 60000 --exit './{,!(node_modules)/**}/*Test.js' './{,!(node_modules)/**}/*TestN.js' './{,!(node_modules)/**}/*TestNK.js'",
    "tsc": "tsc --project ./tsconfig.json",
    "watch": "RESULT=\"$(find . -name '*.ts' -o -name '*.tsx' -not -path './node_modules/*' -not -name '*.d.ts*')\" && if [ -z \"$RESULT\" ]; then echo 'Nothing to Compile'; else pnpm run tsc-watch; fi;",
    "eslint-fix": "eslint -c ../../.eslintrc.json . --fix",
    "eslint-ci": "eslint -c ../../.eslintrc.json -f compact . --no-error-on-unmatched-pattern",
    "tsc-watch": "tsc --project ./tsconfig.json --watch",
    "test-ci": "RESULT=\"$(find . -name '**Test.js' -o -name '**TestN.js' -o -name '**TestNK.js' -not -path 'node_modules/*')\" && if [ -z \"$RESULT\" ]; then echo 'No tests'; else pnpm run mocha-ci; fi;",
    "mocha-ci": "mocha -p --retries 1 --reporter xunit --reporter-option output=test_results.xml --jobs=1 --timeout 60000 --exit './{,!(node_modules)/**}/*Test.js' './{,!(node_modules)/**}/*TestN.js' './{,!(node_modules)/**}/*TestNK.js'",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook"
  },
  "repository": "https://github.com/burtonator/polar-bookshelf",
  "keywords": [
    "PDF",
    "viewer",
    "PDF.js",
    "ebook",
    "annotations"
  ],
  "author": {
    "name": "contributors",
    "email": "noone@example.com"
  },
  "contributors": [
    {
      "name": "Kevin Burton"
    }
  ],
  "build": {
    "appId": "io.inputneuron/polar",
    "mac": {
      "category": "Books"
    }
  },
  "license": "GPL-3.0-only",
  "devDependencies": {
    "@babel/core": "^7.16.7",
    "@storybook/addon-actions": "^6.4.10",
    "@storybook/addon-essentials": "^6.4.10",
    "@storybook/addon-links": "^6.4.10",
    "@storybook/react": "^6.4.10",
    "@types/amplitude-js": "=7.0.1",
    "@types/chai": "4.2.11",
    "@types/deep-equal": "=1.0.1",
    "@types/jsdom": "=16.2.13",
    "@types/mocha": "=9.0.0",
    "@types/node": "=14.17.9",
    "@types/react": "=17.0.2",
    "@types/react-dom": "=17.0.2",
    "@types/react-helmet": "=6.1.0",
    "@types/react-router-dom": "=5.1.5",
    "@types/react-window": "=1.8.2",
    "@types/throttle-debounce": "=2.1.0",
    "babel-loader": "^8.2.3",
    "chai": "4.2.0",
    "dotenv": "=8.6.0",
    "jsdom": "=16.7.0",
    "mocha": "=9.1.1",
    "userflow.js": "=2.2.0",
    "wait-for-expect": "3.0.1",
    "polar-test": "0.0.0",
    "@testing-library/react": "=12.1.2",
    "karma-structured-json-reporter": "=1.0.1"
  },
  "dependencies": {
    "@antv/g6": "=4.3.5",
    "@emotion/is-prop-valid": "=1.1.0",
    "@fortawesome/fontawesome-svg-core": "=1.2.35",
    "@fortawesome/free-brands-svg-icons": "=5.13.0",
    "@fortawesome/free-regular-svg-icons": "=5.13.0",
    "@fortawesome/free-solid-svg-icons": "=5.13.0",
    "@fortawesome/react-fontawesome": "=0.1.14",
    "@nivo/bar": "=0.61.1",
    "@nivo/calendar": "=0.61.1",
    "@nivo/line": "=0.61.1",
    "@nivo/pie": "=0.61.1",
    "@sentry/browser": "6.2.3",
    "@sentry/integrations": "6.2.3",
    "@sentry/tracing": "6.2.3",
    "@stripe/stripe-js": "=1.11.0",
    "amplitude-js": "=8.3.1",
    "blueimp-md5": "2.16.0",
    "clsx": "=1.1.1",
    "copy-html-to-clipboard": "=4.0.1",
    "deep-equal": "=1.0.1",
    "email-addresses": "=3.0.3",
    "epubjs": "=0.3.89-polar.23",
    "firebase": "=8.10.0",
    "firebaseui": "=4.8.0",
    "framer-motion": "=3.3.0",
    "js-cookie": "=2.2.1",
    "lodash": "=4.17.15",
    "mobx": "=6.3.2",
    "mobx-react-lite": "=3.2.0",
    "moment": "=2.29.1",
    "pdfjs-dist": "=2.8.250-polar.3",
    "polar-accounts": "0.0.0",
    "polar-answers-api": "0.0.0",
    "polar-assets": "0.0.0",
    "polar-backend-api": "0.0.0",
    "polar-blocks": "0.0.0",
    "polar-browsers": "0.0.0",
    "polar-content-capture": "0.0.0",
    "polar-dom-text-search": "0.0.0",
    "polar-epub": "0.0.0",
    "polar-file-saver": "0.0.0",
    "polar-firebase": "0.0.0",
    "polar-migration-block-annotations": "0.0.0",
    "polar-firebase-browser": "0.0.0",
    "polar-firebase-test": "0.0.0",
    "polar-firestore-like": "0.0.0",
    "polar-html": "0.0.0",
    "polar-markdown-parser": "0.0.0",
    "polar-pagemarks-auto": "0.0.0",
    "polar-pdf": "0.0.0",
    "polar-release-metadata": "0.0.0",
    "polar-shared": "0.0.0",
    "polar-shared-webserver": "0.0.0",
    "polar-snapshot-cache": "0.0.0",
    "polar-spaced-repetition": "0.0.0",
    "polar-spaced-repetition-api": "0.0.0",
    "polar-web-extension-api": "0.0.0",
    "polar-electron-framework": "0.0.0",
    "polar-webapp-links": "0.0.0",
    "@material-ui/core": "=4.11.3",
    "@material-ui/icons": "=4.11.2",
    "@material-ui/lab": "=4.0.0-alpha.57",
    "@material-ui/x-grid": "=4.0.0-alpha.35",
    "react-async": "=10.0.1",
    "react-fast-compare": "=3.2.0",
    "react-helmet": "=6.1.0",
    "react-intersection-observer": "=8.30.1",
    "react-moment": "=0.9.7",
    "react-rnd": "=10.2.3",
    "react-router-dom": "=5.2.0",
    "react-router": "=5.2.0",
    "react-teleporter": "=2.1.1",
    "react-window": "=1.8.6",
    "rxjs": "=6.6.7",
    "semver": "=6.3.0",
    "use-local-storage-state": "=6.0.0",
    "typemoq": "=2.1.0",
    "throttle-debounce": "=3.0.1",
    "react": "=17.0.2",
    "react-dom": "=17.0.2",
    "@material-ui/styles": "=4.11.4",
    "re-resizable": "=6.6.1",
    "@nivo/core": "=0.61.0",
    "global-jsdom": "=8.4.0"
  }
}

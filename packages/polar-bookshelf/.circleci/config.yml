# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
    # specify the version you desire here
    #
    # all images and tags here:
    #   https://circleci.com/docs/2.0/docker-image-tags.json
    #
    - image: circleci/node:12.1-stretch

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: rm -rf node_modules/loader && rm -rf node_modules/injector && npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    - run:
        name: Install packages needed for Electron testing.
        command: sudo apt-get install libgtk-3-0 libnss3 libxss1 libasound2

    - run:
        name: XVFB installed?
        command: whereis Xvfb

    - run:
        name: Running X virtual framebuffer
        command: Xvfb -ac :99 -screen 0 1280x1024x16 +extension RANDR > /dev/null 2>&1
        background: true

    - run:
        name: Compile Typescript
        command: npx tsc

    - run:
        name: npm test
        command: npm test

  e2e:

    parameters:
        num:
            description: "The ID integer of this e2e spectron test (0-N)"
            type: integer

    docker:
      # specify the version you desire here
      #
      # all images and tags here:
      #   https://circleci.com/docs/2.0/docker-image-tags.json
      #
      - image: circleci/node:12.1-stretch

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: rm -rf node_modules/loader && rm -rf node_modules/injector && npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Install packages needed for Electron testing.
          command: sudo apt-get install libgtk-3-0 libnss3 libxss1 libasound2

      - run:
          name: XVFB installed?
          command: whereis Xvfb

      - run:
          name: Running X virtual framebuffer
          command: Xvfb -ac :99 -screen 0 1280x1024x16 +extension RANDR > /dev/null 2>&1
          background: true

      - run:
          name: Compile Typescript
          command: npx tsc

      - run:
          name: What is my IP
          command: |
            curl -X GET "https://httpbin.org/ip" -H "accept: application/json"

      - run:
          name: e2e
          command: |
            export DISPLAY=:99 &&
            export SPECTRON_OFFSCREEN=true &&
            npm run-script e2e-<< parameters.num>>

  build-webapp:
    docker:
      # specify the version you desire here
      #
      # all images and tags here:
      #   https://circleci.com/docs/2.0/docker-image-tags.json
      #
      - image: circleci/node:12.1-stretch

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: rm -rf node_modules/loader && rm -rf node_modules/injector && npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Compile Typescript
          command: npx tsc

      - run:
          name: build and verify webapp
          command: |
            npm run-script build-webapp && \
            ehco "Webapp Built Successfully" && \
            pwd && \
            find web/dist/chrome-bundle.js -size +3500000c |tee /dev/stderr| egrep '.*' && \
            find web/dist/repository-bundle.js -size +4000000c |tee /dev/stderr| egrep '.*'

workflows:
  version: 2
  parallel_workflow:
    jobs:
      - build
      - e2e:
          num: 0
      - e2e:
          num: 1
      - build-webapp



// allow reads on resources that aren't present.  This is critical because if
// we do not have this rule then when a user tries to read a document that
// does not exist then they will get a "permission failed" error/exception.
// We also need to do this FIRST so that no other rule is evaluated since
// they might result in null pointer exceptions when trying to read the data
// property on a record that does not exist.
allow delete, read: if resource == null || resource.data == null;

// write new data
allow write: if (resource == null || resource.data == null) && request.auth.uid == request.resource.data.uid

// read or delete existing data
allow read, delete: if request.auth.uid == resource.data.uid;

// write of existing data and verify both resources
allow write: if request.resource.data.uid == request.auth.uid && resource.data.uid == request.auth.uid;

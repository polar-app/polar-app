// this rule is shared with both doc_info and doc_meta

// allow reads on resources that aren't present.  This is critical because if
// we do not have this rule then when a user tries to read a document that
// does not exist then they will get a "permission failed" error/exception.
// We also need to do this FIRST so that no other rule is evaluated since
// they might result in null pointer exceptions when trying to read the data
// property on a record that does not exist.
allow delete, read: if resource == null || resource.data == null;

// if the visibility is public we're ok with sharing
allow read: if resource.data.visibility == 'public';

// if the visibility is public we're ok with sharing
allow read: if resource.data.visibility == 'protected';

// If the user is the owner they can read it obviously
allow read: if request.auth != null && request.auth.uid == resource.data.uid;

// allow read on this document if it was added by the user to a group.
allow read: if resource.data.keys().hasAny(['groups']) && resource.data.groups.size() > 0 && isPermittedGroups(resource.data.groups);

allow write: if request.auth != null && (resource == null || request.auth.uid == resource.data.uid);
